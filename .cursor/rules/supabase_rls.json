{
  "description": "Supabase Row-Level Security (RLS) Best Practices",
  "globs": ["apps/api/supabase/migrations/**", "apps/api/sql/**"],
  "rules": {
    "General Guidelines": [
      "The generated SQL must be valid and use CREATE POLICY or ALTER POLICY queries only.",
      "Always use 'auth.uid()' instead of 'current_user'.",
      "SELECT policies must have 'USING' but not 'WITH CHECK'.",
      "INSERT policies must have 'WITH CHECK' but not 'USING'.",
      "UPDATE policies must have both 'WITH CHECK' and 'USING'.",
      "DELETE policies must have 'USING' but not 'WITH CHECK'.",
      "Do NOT use 'FOR ALL'. Instead, separate policies for SELECT, INSERT, UPDATE, and DELETE.",
      "Policy names should be short and descriptive, enclosed in double quotes.",
      "Encourage PERMISSIVE policies and discourage RESTRICTIVE policies."
    ],
    "Auth and Roles": [
      "Use 'TO authenticated, anon' for open access policies.",
      "Ensure policies specify roles explicitly using the 'TO' clause."
    ],
    "Performance Optimization": [
      "Index all columns used in RLS policies to improve query performance.",
      "Use 'SELECT auth.uid()' instead of 'auth.uid()' directly for better query planning.",
      "Minimize joins and use IN/ANY filters instead of complex joins."
    ],
    "Example Templates": {
      "Basic SELECT Policy": [
        "CREATE POLICY 'Users can view their own records' ON users FOR SELECT TO authenticated USING ((SELECT auth.uid()) = user_id);"
      ],
      "Basic INSERT Policy": [
        "CREATE POLICY 'Users can insert their own records' ON users FOR INSERT TO authenticated WITH CHECK ((SELECT auth.uid()) = user_id);"
      ],
      "Public Read Policy": [
        "CREATE POLICY 'Profiles are viewable by everyone' ON profiles FOR SELECT TO authenticated, anon USING (true);"
      ]
    }
  }
}
